<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springapp.mvc.mapper.LogCommentMapper" >
  <resultMap id="BaseResultMap" type="com.springapp.mvc.entity.LogComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="commenter_id" property="commenterId" jdbcType="INTEGER" />
    <result column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="add_ts" property="addTs" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="super_id" property="superId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.springapp.mvc.entity.LogComment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, commenter_id, log_id, add_ts, state, super_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springapp.mvc.entity.LogComment" >
    insert into log_comment (id, commenter_id, log_id, 
      add_ts, state, super_id, 
      content)
    values (#{id,jdbcType=INTEGER}, #{commenterId,jdbcType=INTEGER}, #{logId,jdbcType=INTEGER}, 
      #{addTs,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{superId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springapp.mvc.entity.LogComment" >
    insert into log_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commenterId != null" >
        commenter_id,
      </if>
      <if test="logId != null" >
        log_id,
      </if>
      <if test="addTs != null" >
        add_ts,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="superId != null" >
        super_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commenterId != null" >
        #{commenterId,jdbcType=INTEGER},
      </if>
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="addTs != null" >
        #{addTs,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="superId != null" >
        #{superId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springapp.mvc.entity.LogComment" >
    update log_comment
    <set >
      <if test="commenterId != null" >
        commenter_id = #{commenterId,jdbcType=INTEGER},
      </if>
      <if test="logId != null" >
        log_id = #{logId,jdbcType=INTEGER},
      </if>
      <if test="addTs != null" >
        add_ts = #{addTs,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="superId != null" >
        super_id = #{superId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springapp.mvc.entity.LogComment" >
    update log_comment
    set commenter_id = #{commenterId,jdbcType=INTEGER},
      log_id = #{logId,jdbcType=INTEGER},
      add_ts = #{addTs,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      super_id = #{superId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springapp.mvc.entity.LogComment" >
    update log_comment
    set commenter_id = #{commenterId,jdbcType=INTEGER},
      log_id = #{logId,jdbcType=INTEGER},
      add_ts = #{addTs,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      super_id = #{superId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>